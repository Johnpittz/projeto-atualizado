{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class TarefaService {\n  constructor() {\n    this.atividades = [];\n  }\n  getAtividades() {\n    return of(this.atividades);\n  }\n  adicionarAtividade(atividade) {\n    this.atividades.push(atividade);\n  }\n  atualizarAtividade(atividade) {\n    const index = this.atividades.findIndex(a => a.id === atividade.id);\n    if (index !== -1) {\n      this.atividades[index] = atividade;\n    }\n  }\n  getTarefas() {\n    return of(this.atividades);\n  }\n}\nTarefaService.ɵfac = function TarefaService_Factory(t) {\n  return new (t || TarefaService)();\n};\nTarefaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TarefaService,\n  factory: TarefaService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,EAAE,QAAQ,MAAM;;AAIrC,OAAM,MAAOC,aAAa;EAGxBC;IAFQ,eAAU,GAAkB,EAAE;EAEtB;EAEhBC,aAAa;IACX,OAAOH,EAAE,CAAC,IAAI,CAACI,UAAU,CAAC;EAC5B;EAEAC,kBAAkB,CAACC,SAAsB;IACvC,IAAI,CAACF,UAAU,CAACG,IAAI,CAACD,SAAS,CAAC;EACjC;EAEAE,kBAAkB,CAACF,SAAsB;IACvC,MAAMG,KAAK,GAAG,IAAI,CAACL,UAAU,CAACM,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,SAAS,CAACM,EAAE,CAAC;IACnE,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACL,UAAU,CAACK,KAAK,CAAC,GAAGH,SAAS;;EAEtC;EAEAO,UAAU;IACR,OAAOb,EAAE,CAAC,IAAI,CAACI,UAAU,CAAC;EAC5B;;AAtBWH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAa,SAAbb,aAAa;EAAAc,YAFZ;AAAM","names":["of","TarefaService","constructor","getAtividades","atividades","adicionarAtividade","atividade","push","atualizarAtividade","index","findIndex","a","id","getTarefas","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Notebook19\\Desktop\\ATIVIDADE\\desafio\\src\\app\\shared\\tarefa.service.ts"],"sourcesContent":["import { ITarefaEnum } from './models/ITarefa';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TarefaService {\n  private atividades: ITarefaEnum[] = [];\n\n  constructor() { }\n\n  getAtividades(): Observable<ITarefaEnum[]> {\n    return of(this.atividades);\n  }\n\n  adicionarAtividade(atividade: ITarefaEnum): void {\n    this.atividades.push(atividade);\n  }\n\n  atualizarAtividade(atividade: ITarefaEnum): void {\n    const index = this.atividades.findIndex(a => a.id === atividade.id);\n    if (index !== -1) {\n      this.atividades[index] = atividade;\n    }\n  }\n\n  getTarefas(): Observable<ITarefaEnum[]> {\n    return of(this.atividades);\n  }\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}